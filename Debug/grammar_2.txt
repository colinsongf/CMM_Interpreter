<程序> -> <函数定义或声明> <程序>
<程序> -> $
<函数定义或声明> -> <类型> <变量> ( <参数声明> ) <函数定义或声明闭包>
<函数定义或声明闭包> -> <复合函数块>
<函数定义或声明闭包> -> ;
<类型> -> int
<类型> -> real
<变量> -> <标识符> <数组下标>
<标识符> -> ID
<数组下标> -> [ <因式> ]
<数组下标> -> $
<因式> -> ( <表达式> )
<因式> -> <变量>
<因式> -> <数字>
<因式> -> $
<数字> -> INT_VALUE
<数字> -> FLOAT_VALUE
<表达式> -> <一元表达式>
<表达式> -> <因子> <项>
<一元表达式> -> <前缀表达式>
<一元表达式> -> <后缀表达式>
<前缀表达式> -> <自增减运算符> <变量>
<后缀表达式> -> <变量> <自增减运算符>
<自增减运算符> -> ++
<自增减运算符> -> --
<因子> -> <因式> <因式递归>
<因式递归> -> * <因式> <因式递归>
<因式递归> -> / <因式> <因式递归>
<因式递归> -> % <因式> <因式递归>
<因式递归> -> $
<项> -> + <因子> <项>
<项> -> - <因子> <项>
<项> -> $
<参数声明> -> <声明> <声明闭包>
<参数声明> -> $
<声明> -> <类型> <变量> <赋初值>
<赋初值> -> = <右值>
<赋初值> -> $
<右值> -> <表达式>
<右值> -> { <多个数据> }
<多个数据> -> <数字> <数字闭包>
<数字闭包> -> , <数字> <数字闭包>
<数字闭包> -> $
<声明闭包> -> , <声明> <声明闭包>
<声明闭包> -> $
<复合函数块> -> { <函数块> }
<函数块> -> <声明语句闭包> <函数块闭包>
<声明语句闭包> -> <声明语句> <声明语句闭包>
<声明语句闭包> -> $
<声明语句> -> <声明> ;
<函数块闭包> -> <赋值函数> <函数块>
<函数块闭包> -> <for循环> <函数块>
<函数块闭包> -> <while循环> <函数块>
<函数块闭包> -> <条件语句> <函数块>
<函数块闭包> -> <函数返回> <函数块>
<函数块闭包> -> $
<赋值函数> -> <自增减运算符> <变量> ;
<赋值函数> -> <类型> <变量> <赋值或函数调用>
<赋值函数> -> <变量> <赋值或函数调用>
<赋值或函数调用> -> <自增减运算符> ;
<赋值或函数调用> -> = <右值> ;
<赋值或函数调用> -> += <右值> ;
<赋值或函数调用> -> -= <右值> ;
<赋值或函数调用> -> *= <右值> ;
<赋值或函数调用> -> /= <右值> ;
<赋值或函数调用> -> %= <右值> ;
<赋值或函数调用> -> ( <参数列表> ) ;
<参数列表> -> <参数> <参数闭包>
<参数闭包> -> , <参数> <参数闭包>
<参数闭包> -> $
<参数> -> <标识符>
<参数> -> <数字>
<参数> -> <字符串>
<字符串> -> string
<for循环> -> for <for循环块>
<for循环块> -> ( <赋值函数> <逻辑表达式> ; <一元表达式> ) <复合函数块>
<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑运算符> -> <
<逻辑运算符> -> <=
<逻辑运算符> -> >
<逻辑运算符> -> >=
<逻辑运算符> -> <>
<逻辑运算符> -> ==
<while循环> -> while <while循环块>
<while循环块> -> ( <逻辑表达式> ) <复合函数块>
<条件语句> -> if <条件语句块>
<条件语句块> -> ( <逻辑表达式> ) <复合函数块> <否则语句>
<否则语句> -> else <复合函数块>
<否则语句> -> $
<函数返回> -> return <因式> ;